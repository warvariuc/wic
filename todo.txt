Документировать классы (__doc__)
Сделать объект квалификаторычисла
Запаковывать конфигурацию в zip.
Выгружать модули, загруженные пользователем.
При конвертации .qrc->.py и .ui->.py сразу компилировать .py->.pyc и удалять .py, поскольку полученные .py все равно нельзя (не рекомендуется) редактировать вручную.

Каким образом функциональность системы доступна пользовательским модулям?
Через отдельный модуль (m_), через глобальный модуль, через QtGui.qApp, через встраивание в пользовательские модули имён классов?
Встраивание имен, по-моему, имеет один недостаток - не знаешь откуда эта функция. 
Если в теле пользовательского модуля обращаться в классам и функциям глобального модуля,
используя gm.myclass or gm.myfunction - так больше писать.
Если имена встроенны - есть конфузия: встретив в модуле вызов функции myfunciton, можно
замешкаться, не зная какая именно функция здесь вызывается - глобального модуля, системы или локальная модуля.
Встроенные имена вводят в замешательство парсер модуля, к-й считатет что эти имена не определены.


Не делать многосторочные части у справочников. Сделать виджет СписокСправочника, который будет показывать подчиненный справочник.



Работа с числами: использовать ли Decimal? Если да, то как бы эту работу сделать легкой и прозрачной?


Работа без конфигурации - возможность запустить только отчёт. Т.е. отсутствует глобальный модуль. import gM - вызовет ошибку.
Работа без базы данных - только конфигурация.


http://www.dbforums.com/database-concepts-design/1641734-data-record-versioning-how-implement.html
http://www.dbforums.com/database-concepts-design/1626726-database-concept-how-set-up-database-i-can-track-changes-item.html
http://stackoverflow.com/questions/323065/how-to-version-control-a-record-in-a-database 
